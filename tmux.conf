# ##########################################################################
# ##########################################################################
# ~/.tmux.conf
#
# See the following files:
#
#   /opt/local/share/doc/tmux/t-williams.conf
#   /opt/local/share/doc/tmux/screen-keys.conf
#   /opt/local/share/doc/tmux/vim-keys.conf
#
# URLs to read:
#
#   http://blog.yjl.im/2009/11/migrating-to-tmux-from-gnuscreen.html
#   http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/
#   http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
#   http://www.dayid.org/os/notes/tm.html
#
# Other sample tmux.conf files
#
#   http://www.mindfuzz.net/?p=178
#
# -----------------------------------------------------------------------------
# ##########################################################################
# ##########################################################################
## List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'wsfreund/tmux-sessionist'
# ##########################################################################
# ##########################################################################
###Â Plugins configuration
# ##########################################################################
# ##########################################################################
## Resurrect configuration
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
# ##########################################################################
# ##########################################################################
## Continuum configuration
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
#set -g @continuum-boot 'on'
if 'test "$(uname)" = "Darwin"' 'set -g @continuum-boot-options "iterm,fullscreen"'
# ##########################################################################
# ##########################################################################
## Sessionist help
#bind-key \ @sessionist-kill-session
# ##########################################################################
# ##########################################################################
## Global settings 
# Set prefix key to Ctrl-q
unbind-key C-b
set-option -g prefix C-q
# return to last window
bind-key C-q last-window
# send the prefix to client inside window
bind-key q send-prefix
#bind-key C-e run "source ~/DotFiles/tmux_toggle_tmuxeption.conf"
# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"
# ##########################################################################
# ##########################################################################
## open a man page in new window
# open a man page on top with user specified command
#bind-key h command-prompt -p "man: " "split-window 'man %1'"
bind-key h command-prompt -p "man:" "split-window -bv -p 30 'exec man %%'"
#bind-key h command-prompt -p "sleep" "split-window 'sleep %1'"
#bind-key h command-prompt -p "host" "split-window 'man %1'"
# ##########################################################################
# ##########################################################################
#bind-key C-v split-window -v -l 14 "trap \"tmux pipe-pane -t :Work \\\"\\\" && rm \\\"/tmp/wsfreund/$(printf '%q' $(tmux display-message -p '#S'))_work.pipe\\\"; \" INT; tmux pipe-pane -o -t :Work \"cat > \\\"/tmp/$USER/$(printf '%q' $(tmux display-message -p '#S'))_work.pipe\\\"\" && clear && tail -n 14 -f \"/tmp/wsfreund/$(printf '%q' $(tmux display-message -p '#S'))_work.pipe\""
# ##########################################################################
# ##########################################################################
## Global configuration
# quick view of processes
#bind-key "~" split-window "exec htop"
# scrollback buffer n lines
set -g history-limit 500000
# listen for activity on all windows
set -g bell-action any
# start window indexing at zero (default)
set -g base-index 1
# tell tmux to use 256 colour terminal
set -g default-terminal "screen-256color"
# xterm-style function key sequences
setw -g xterm-keys on
# control automatic window renaming
setw -g automatic-rename off
# enable wm window titles
set -g set-titles on
# wm window title string (uses statusbar variables)
#set -g set-titles-string "tmux.#I.#W"
# don't close windows. just deactivate them. use respawn-window to reactivate.
setw -g remain-on-exit off
# set tmux to load these variables each time it create new sessions:
set-option -ga update-environment ' HAS_POWERLINE'
# ##########################################################################
# ##########################################################################
## Key bindings 
# reload settings
bind-key R source-file ~/.tmux.conf
# detach client
bind-key d detach
bind-key C-d detach
# choose a client to detach
bind-key D choose-client
# choose window/session
bind-key C-w choose-window
bind-key C-t choose-session
# display visible indicator of each pane
bind-key w display-panes
# enable mouse selection in copy mode
bind m run "source ~/DotFiles/tmux_toggle_mouse.conf"
# ##########################################################################
# ##########################################################################
# navigate panes using jk, and ctrl+jk (no prefix)
#bind-key -r j select-pane -t :.-
#bind-key -r k select-pane -t :.+
#bind-key -r C-j select-pane -t :.-
#bind-key -r C-k select-pane -t :.+
# navigate windows using hl, and ctrl-hl (no prefix)
#bind-key -r h select-window -t :-
#bind-key -r l select-window -t :+
#bind-key -r C-h select-window -t :-
#bind-key -r C-l select-window -t :+
## swap panes
#bind-key -r J swap-pane -D
#bind-key -r K swap-pane -U
## Ctrl-Left/Right cycles thru windows (no prefix)
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+
## Ctrl-Up/Down cyles thru panes (no prefix)
#bind-key -n "C-Up"   select-pane -t :.-
#bind-key -n "C-Down" select-pane -t :.+
# Select 1 to 10
bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9
bind-key 0 select-window -t :0
bind-key -n C-1 select-window -t :1
bind-key -n C-2 select-window -t :2
bind-key -n C-3 select-window -t :3
bind-key -n C-4 select-window -t :4
bind-key -n C-5 select-window -t :5
bind-key -n C-6 select-window -t :6
bind-key -n C-7 select-window -t :7
bind-key -n C-8 select-window -t :8
bind-key -n C-9 select-window -t :9
bind-key -n C-0 select-window -t :10
# Select 11 to 20
bind-key C-1 select-window -t :11
bind-key C-2 select-window -t :12
bind-key C-3 select-window -t :13
bind-key C-4 select-window -t :14
bind-key C-5 select-window -t :15
bind-key C-6 select-window -t :16
bind-key C-7 select-window -t :17
bind-key C-8 select-window -t :18
bind-key C-9 select-window -t :19
bind-key C-0 select-window -t :20
# Cycle to next pane
bind-key -r Tab select-pane -t :.+
# window movement / renumbering like in screen's :number
bind-key < command-prompt -p "swap window with:"  "swap-window -t '%%'"
# ##########################################################################
# ##########################################################################
## kill current pane/window
bind-key k confirm-before kill-pane
bind-key K confirm-before kill-window
bind-key C-k confirm-before kill-pane
# ##########################################################################
# ##########################################################################
## specific window layouts
#bind -r y next-layout
#bind o select-layout "active-only"
#bind O select-layout "main-vertical"
# ##########################################################################
# ##########################################################################
# vi-style controls for copy mode
setw -g mode-keys vi
# copying and pasting
unbind-key [
unbind p
unbind-key -t vi-copy v
bind-key Escape copy-mode
bind-key ] paste-buffer -s \015
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.
bind-key -t vi-copy 'y' copy-selection
# list all paste buffers (default key is '#')
bind-key b list-buffers
# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer
# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer
# ##########################################################################
# ##########################################################################
## Screen-like key bindings 
# new window
bind-key C-c new-window
bind-key c new-window
# next
bind-key -r Space next-window
bind-key -r "C-Space" next-window
# prev
bind-key BSpace previous-window
# quit
bind-key \ confirm-before kill-server
# displays
bind-key * list-clients
# ##########################################################################
# ##########################################################################
## redisplay (default key in tmux is 'r')
#bind-key C-l refresh-client
#bind-key l refresh-client
bind-key r refresh-client
# ##########################################################################
# ##########################################################################
## Split windows like vim 
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s split-window -v
bind-key v split-window -h
# alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h
# resize panes like vim
#bind-key -r < resize-pane -L 3
#bind-key -r > resize-pane -R 3
#bind-key -r + resize-pane -U 1
#bind-key -r = resize-pane -D 1
# ##########################################################################
# ##########################################################################
## clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'
#run 'cut -c3- ~/.tmux.conf | sh -s apply_configuration'
# ##########################################################################
# ##########################################################################
## Statusbar settings 
# toggle statusbar (zoom)
bind-key z set status
# use vi-style key bindings in the status line
set -g status-keys vi
# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 5000
set -g escape-time 0
set -g status-interval 1000
# check file exists before sourcing it in tmux.conf
if 'test "$HAS_POWERLINE" -eq "1" -a -f "$HOME/DotFiles/tmux_vim_statusline.conf"' 'source "$HOME/DotFiles/tmux_vim_statusline.conf"'
if 'test "$HAS_POWERLINE" -ne "1" -a -f "$HOME/DotFiles/tmux_vim_statusline_no_pl.conf"' 'source "$HOME/DotFiles/tmux_vim_statusline_no_pl.conf"'
# ##########################################################################
# ##########################################################################
## Session initialization 
# Note:
#   new  - alias for new-session
#   neww - alias for new-window
# first session
#new -d -s0
#neww -d
#neww -d
#neww -d
# second session
#new -d -s1
#neww -d
#neww -d
#select-window -t1
# ##########################################################################
# ##########################################################################
## Load local configuration
if 'test -f $HOME/DotFiles/tmux_local.conf' 'source $HOME/DotFiles/tmux_local.conf'
# ##########################################################################
# ##########################################################################
## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# ##########################################################################
# ##########################################################################
# vim: fen fdl=0 fdm=marker
